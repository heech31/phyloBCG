rm(list=ls())#
library(abind)#install.packages("abind")#
library(plyr)#
library(xtable)#
setwd("/Users/heecheolchung/Dropbox/Research/TAMU/graphical/p50/sensitiveAnalysis/results/")#
#
###################################
##     Simulation Summary       ###
###################################
allnorms <- function(d) vapply(c("1","I","F","M","2"),#
                               norm, x = d, double(1))#
#
mods <- c("h_","lambda_","v0_")#
settingNames <- paste(mods,sep="")#
npara        <- 5#
#
MCC   <- matrix(0,npara,length(settingNames))#
MCCse <- matrix(0,npara,length(settingNames))#
#
TPR   <- matrix(0,npara,length(settingNames))#
FPR   <- matrix(0,npara,length(settingNames))#
#
p <- 50#
nUpperTri <- p*(p-1)/2#
#
allsumm <- matrix(0,npara, length(settingNames) + 1)#
colnames(allsumm) <- c( rep(c("h","lambda","v0"), each=1 ), "Marg.Inc.Prob" )#
#
# idata <- 1; iset <- 1;#
for( iset in 1:length(settingNames) ){#
#
	for( idata in 1:npara ){#
		load( paste(settingNames[iset],idata,"_7",".RData",sep="") )#
		naCount <- 0#
		naCount <- naCount + sum( is.na( unlist( lapply( Rep10, function(x) x$MCC ) ) ) )#
#
 		MCC[idata,iset]   <- mean( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE )#
 		MCCse[idata,iset] <- sd( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE  )/sqrt(nrep-naCount)#
 		TPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$TP/x$edgeTotal  ) ) )#
 		FPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$FP/(nUpperTri - x$edgeTotal)  ) ) )#
		tmp <- round( c(MCC[idata,iset], TPR[idata,iset], FPR[idata,iset]), 3)#
		tmp <- paste(tmp[1]," (",tmp[2],"/",tmp[3],")",sep="")#
		allsumm[idata,iset] <- tmp#
		if( iset == 1){#
		allsumm[idata,4]    <- round( Rep10[[1]]$edgeTotal/nUpperTri, 3)#
		}#
#
		}#
	}		#
#
allsumm
0.000001
0.00001
IGps = c(1e-6,1e-5,1e-4,1e-3,1e-1)#
lams = c(0.5,2,3,4,5)#
v0s  = c(0.005,0.01,0.05,0.1,0.2)#
h    = c(40,60,70,80,90)
h^2
(0.02)^2 * h^2
(0.02)^2 * h^2
v0
v0s
rm(list=ls())#
library(abind)#install.packages("abind")#
library(plyr)#
library(xtable)#
setwd("/Users/heecheolchung/Dropbox/Research/TAMU/graphical/p50/sensitiveAnalysis/results/")#
#
###################################
##     Simulation Summary       ###
###################################
allnorms <- function(d) vapply(c("1","I","F","M","2"),#
                               norm, x = d, double(1))#
#
IGps = c(1e-6,1e-5,1e-4,1e-3,1e-1)#
lams = c(0.5,2,3,4,5)#
v0s  = c(0.005,0.01,0.05,0.1,0.2)#
h    = c(40,60,70,80,90)
mods <- c("h_","lambda_","v0_")#
settingNames <- paste(mods,sep="")#
npara        <- 5#
#
MCC   <- matrix(0,npara,length(settingNames))#
MCCse <- matrix(0,npara,length(settingNames))#
#
TPR   <- matrix(0,npara,length(settingNames))#
FPR   <- matrix(0,npara,length(settingNames))#
#
p <- 50#
nUpperTri <- p*(p-1)/2#
#
allsumm <- matrix(0,npara, length(settingNames) + 1)
rm(list=ls())#
library(abind)#install.packages("abind")#
library(plyr)#
library(xtable)#
setwd("/Users/heecheolchung/Dropbox/Research/TAMU/graphical/p50/sensitiveAnalysis/results/")#
#
###################################
##     Simulation Summary       ###
###################################
allnorms <- function(d) vapply(c("1","I","F","M","2"),#
                               norm, x = d, double(1))#
#
IGps = c(1e-6,1e-5,1e-4,1e-3,1e-1)#
lams = c(0.5,2,3,4,5)#
v0s  = c(0.005,0.01,0.05,0.1,0.2)#
h    = c(40,60,70,80,90)#
#
mods <- c("h_","lambda_","v0_","IGps_")#
settingNames <- paste(mods,sep="")#
npara        <- 5
mods
MCC   <- matrix(0,npara,length(settingNames))#
MCCse <- matrix(0,npara,length(settingNames))#
#
TPR   <- matrix(0,npara,length(settingNames))#
FPR   <- matrix(0,npara,length(settingNames))#
#
p <- 50#
nUpperTri <- p*(p-1)/2#
#
allsumm <- matrix(0,npara, length(settingNames) + 1)
colnames(allsumm) <- c( rep(c("h","lambda","v0","IGp"), each=1 ), "Marg.Inc.Prob" )
# idata <- 1; iset <- 1;#
for( iset in 1:length(settingNames) ){#
#
	for( idata in 1:npara ){#
		load( paste(settingNames[iset],idata,"_7",".RData",sep="") )#
		naCount <- 0#
		naCount <- naCount + sum( is.na( unlist( lapply( Rep10, function(x) x$MCC ) ) ) )#
#
 		MCC[idata,iset]   <- mean( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE )#
 		MCCse[idata,iset] <- sd( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE  )/sqrt(nrep-naCount)#
 		TPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$TP/x$edgeTotal  ) ) )#
 		FPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$FP/(nUpperTri - x$edgeTotal)  ) ) )#
		tmp <- round( c(MCC[idata,iset], TPR[idata,iset], FPR[idata,iset]), 3)#
		tmp <- paste(tmp[1]," (",tmp[2],"/",tmp[3],")",sep="")#
		allsumm[idata,iset] <- tmp#
		if( iset == 1){#
		allsumm[idata,4]    <- round( Rep10[[1]]$edgeTotal/nUpperTri, 3)#
		}#
#
		}#
	}
mods <- c("h_","lambda_","v0_","IGp_")#
settingNames <- paste(mods,sep="")#
npara        <- 5#
#
MCC   <- matrix(0,npara,length(settingNames))#
MCCse <- matrix(0,npara,length(settingNames))#
#
TPR   <- matrix(0,npara,length(settingNames))#
FPR   <- matrix(0,npara,length(settingNames))#
#
p <- 50#
nUpperTri <- p*(p-1)/2#
#
allsumm <- matrix(0,npara, length(settingNames) + 1)#
colnames(allsumm) <- c( rep(c("h","lambda","v0","IGp"), each=1 ), "Marg.Inc.Prob" )#
#
# idata <- 1; iset <- 1;#
for( iset in 1:length(settingNames) ){#
#
	for( idata in 1:npara ){#
		load( paste(settingNames[iset],idata,"_7",".RData",sep="") )#
		naCount <- 0#
		naCount <- naCount + sum( is.na( unlist( lapply( Rep10, function(x) x$MCC ) ) ) )#
#
 		MCC[idata,iset]   <- mean( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE )#
 		MCCse[idata,iset] <- sd( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE  )/sqrt(nrep-naCount)#
 		TPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$TP/x$edgeTotal  ) ) )#
 		FPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$FP/(nUpperTri - x$edgeTotal)  ) ) )#
		tmp <- round( c(MCC[idata,iset], TPR[idata,iset], FPR[idata,iset]), 3)#
		tmp <- paste(tmp[1]," (",tmp[2],"/",tmp[3],")",sep="")#
		allsumm[idata,iset] <- tmp#
		if( iset == 1){#
		allsumm[idata,4]    <- round( Rep10[[1]]$edgeTotal/nUpperTri, 3)#
		}#
#
		}#
	}
allsumm
Rep10[[1]]
Rep10[[1]]$edgeTotal
nUpperTri
round( Rep10[[1]]$edgeTotal/nUpperTri, 3)
allsumm
mods <- c("h_","lambda_","v0_","IGp_")#
settingNames <- paste(mods,sep="")#
npara        <- 5#
#
MCC   <- matrix(0,npara,length(settingNames))#
MCCse <- matrix(0,npara,length(settingNames))#
#
TPR   <- matrix(0,npara,length(settingNames))#
FPR   <- matrix(0,npara,length(settingNames))#
#
p <- 50#
nUpperTri <- p*(p-1)/2#
#
allsumm <- matrix(0,npara, length(settingNames) + 1)#
colnames(allsumm) <- c( rep(c("h","lambda","v0","IGp"), each=1 ), "Marg.Inc.Prob" )#
#
# idata <- 1; iset <- 1;#
for( iset in 1:length(settingNames) ){#
#
	for( idata in 1:npara ){#
		load( paste(settingNames[iset],idata,"_7",".RData",sep="") )#
		naCount <- 0#
		naCount <- naCount + sum( is.na( unlist( lapply( Rep10, function(x) x$MCC ) ) ) )#
#
 		MCC[idata,iset]   <- mean( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE )#
 		MCCse[idata,iset] <- sd( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE  )/sqrt(nrep-naCount)#
 		TPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$TP/x$edgeTotal  ) ) )#
 		FPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$FP/(nUpperTri - x$edgeTotal)  ) ) )#
		tmp <- round( c(MCC[idata,iset], TPR[idata,iset], FPR[idata,iset]), 3)#
		tmp <- paste(tmp[1]," (",tmp[2],"/",tmp[3],")",sep="")#
		allsumm[idata,iset] <- tmp#
		if( iset == 1){#
		allsumm[idata,5]    <- round( Rep10[[1]]$edgeTotal/nUpperTri, 3)#
		}#
#
		}#
	}
allsumm
IGps = c(1e-6,1e-5,1e-4,1e-3,1e-1)#
lams = c(0.5,2,3,4,5)#
v0s  = c(0.005,0.01,0.05,0.1,0.2)#
hs    = c(40,60,70,80,90)#
#
mods <- c("h_","lambda_","v0_","IGp_")#
settingNames <- paste(mods,sep="")#
npara        <- 5#
#
MCC   <- matrix(0,npara,length(settingNames))#
MCCse <- matrix(0,npara,length(settingNames))#
#
TPR   <- matrix(0,npara,length(settingNames))#
FPR   <- matrix(0,npara,length(settingNames))#
#
p <- 50#
nUpperTri <- p*(p-1)/2#
#
allsumm <- matrix(0,npara, length(settingNames) + 1)#
colnames(allsumm) <- c( rep(c("h","lambda","v0","IGp"), each=1 ), "Marg.Inc.Prob" )#
#
# idata <- 1; iset <- 1;#
for( iset in 1:length(settingNames) ){#
#
	for( idata in 1:npara ){#
		load( paste(settingNames[iset],idata,"_7",".RData",sep="") )#
		naCount <- 0#
		naCount <- naCount + sum( is.na( unlist( lapply( Rep10, function(x) x$MCC ) ) ) )#
#
 		MCC[idata,iset]   <- mean( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE )#
 		MCCse[idata,iset] <- sd( unlist( lapply( Rep10, function(x) x$MCC ) ), na.rm=TRUE  )/sqrt(nrep-naCount)#
 		TPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$TP/x$edgeTotal  ) ) )#
 		FPR[idata,iset]  <- mean( unlist( lapply( Rep10, function(x) x$FP/(nUpperTri - x$edgeTotal)  ) ) )#
		tmp <- round( c(MCC[idata,iset], TPR[idata,iset], FPR[idata,iset]), 3)#
		tmp <- paste(tmp[1]," (",tmp[2],"/",tmp[3],")",sep="")#
		allsumm[idata,iset] <- tmp#
		if( iset == 1){#
		allsumm[idata,5]    <- round( Rep10[[1]]$edgeTotal/nUpperTri, 3)#
		}#
#
		}#
	}
allsumm[,1]
cbind( hs, allsumm[,1], lams, allsumm[,2], v0s, allsumm[,3], IGps, allsumm[,4] )
xtable( cbind( hs, allsumm[,1], lams, allsumm[,2], v0s, allsumm[,3], IGps, allsumm[,4] ) )
